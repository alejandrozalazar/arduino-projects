#include "IRremote.h"
#include <Arduino.h>

IRsend irsend;
String readString;

int khz = 38; //NB Change this default value as neccessary to the correct modulation frequency
void setup() {
  // Serial.begin(9600);
  Serial.begin(115200);

  Serial.println("serial on"); // so I can keep track
}


unsigned signal_0[] ={500,550,550,1500,500,500,550,550,500,500,550,500,500,550,500,550,500,600,500,1500,500,550,550,500,550,1500,500,550,450,600,500,1500,500,1550,500,1550,500,1500,500,1550,500,550,500,550,500,500,450,650,500,500,500,550,500,550,550,550,550,500,500,550,500,500,550,500,550,500,500,550,550,500,500,550,500,550,500,500,500,600,500,500,500,550,500,550,500,550,500,550,500,500,500,550,500,550,500,550,550,500,500};
unsigned on[] ={500,550,550,1500,500,500,550,550,500,500,550,500,500,550,500,550,500,600,500,1500,500,550,550,500,550,1500,500,550,450,600,500,1500,500,1550,500,1550,500,1500,500,1550,500,550,500,550,500,500,450,650,500,500,500,550,500,550,550,550,550,500,500,550,500,500,550,500,550,500,500,550,550,500,500,550,500,550,500,500,500,600,500,500,500,550,500,550,500,550,500,550,500,500,500,550,500,550,500,550,550,500,500};
/* 30 */unsigned signal_1[] ={550,500,500,1550,500,550,500,500,550,550,450,550,550,500,500,550,500,600,500,1500,550,500,550,500,550,1450,550,500,550,500,550,1500,550,1500,500,1500,500,1550,550,1500,550,500,500,550,500,550,450,550,550,500,550,500,550,550,500,550,500,550,500,550,500,500,550,550,500,500,550,500,500,550,500,550,500,550,500,500,550,500,550,500,550,500,550,500,500,550,500,550,500,550,500,500,550,500,500,550,500,550,500};
unsigned signal_2[] ={550,550,550,1500,500,550,500,550,500,550,500,500,550,550,500,500,550,500,550,1500,500,550,550,500,500,1550,500,550,500,500,550,1500,550,1500,550,1500,500,1500,550,1500,500,550,500,550,500,550,500,500,550,500,600,500,500,550,500,500,550,500,550,500,550,500,500,550,500,550,500,550,550,500,500,500,500,600,500,550,500,500,550,500,500,550,550,500,550,500,550,500,550,500,550,500,500,500,550,500,550,550,550};
unsigned signal_3[] ={600,500,500,1550,450,550,550,500,550,500,550,500,500,550,550,550,500,550,500,1500,500,550,550,500,500,1550,500,550,500,500,500,1550,550,1500,550,1500,500,1500,500,1550,500,550,500,550,500,550,500,500,500,600,500,550,500,550,500,550,500,500,550,500,550,500,500,550,550,500,500,550,500,550,500,550,500,500,550,500,500,550,500,600,500,550,500,500,550,500,550,500,500,550,550,500,500,500,550,500,550,550,450};
unsigned signal_4[] ={550,500,550,1500,550,500,500,550,500,550,500,500,550,500,550,500,500,600,550,1500,500,500,550,550,500,1500,500,550,500,550,500,1500,550,1500,550,1500,550,1500,500,1550,500,500,500,550,500,550,550,550,500,500,550,500,500,550,550,500,500,550,500,550,500,550,550,450,550,550,500,500,550,500,500,550,500,550,500,550,500,500,550,500,550,500,500,550,500,550,500,550,550,500,500,500,500,550,550,500,500,550,550};
unsigned signal_5[] ={550,500,550,1500,550,500,550,500,500,550,500,550,550,500,500,550,500,500,500,1550,550,500,550,500,550,1500,500,550,500,550,500,1550,500,1500,500,1550,500,1500,550,1500,550,550,450,550,500,550,500,550,500,500,600,500,550,500,500,550,500,550,500,550,500,500,500,550,550,500,550,550,500,500,500,550,500,550,500,550,500,550,500,500,550,500,600,500,500,550,500,500,500,600,450,550,550,500,500,550,500,500,600};
unsigned signal_6[] ={550,550,500,1500,500,550,500,550,500,550,500,500,500,550,550,550,500,550,550,1500,500,500,500,600,500,1500,500,550,500,550,500,1500,550,1500,550,1500,550,1500,500,1500,550,500,550,500,500,550,550,500,500,600,500,500,500,550,500,550,550,500,500,550,500,550,500,500,550,500,550,500,550,500,500,550,500,550,500,550,500,500,500,550,550,500,550,500,500,550,500,500,550,500,550,500,500,550,500,550,550,550,500};
/* 24 */unsigned signal_7[] ={550,500,550,1500,550,500,500,550,500,550,500,550,500,500,550,500,550,550,500,1550,500,550,500,500,550,1500,550,500,500,550,550,1500,500,1550,450,1550,500,1550,500,1550,500,500,550,500,550,500,500,550,550,500,500,550,500,550,550,500,550,500,500,550,550,500,550,500,500,550,500,500,550,500,550,500,550,500,550,500,500,550,550,500,500,550,500,500,500,550,500,550,550,500,500,550,500,500,550,550,500,500,500};
unsigned my24[] ={550,500,550,1500,550,500,500,550,500,550,500,550,500,500,550,500,550,550,500,1550,500,550,500,500,550,1500,550,500,500,550,550,1500,500,1550,450,1550,500,1550,500,1550,500,500,550,500,550,500,500,550,550,500,500,550,500,550,550,500,550,500,500,550,550,500,550,500,500,550,500,500,550,500,550,500,550,500,550,500,500,550,550,500,500,550,500,500,500,550,500,550,550,500,500,550,500,500,550,550,500,500,500};
unsigned signal_8[] ={500,550,500,1550,500,500,550,500,550,500,550,500,550,500,500,550,500,600,500,1500,500,550,500,550,550,1500,500,500,550,550,500,1500,550,1500,500,1500,550,1500,550,1500,550,500,500,550,500,500,550,550,500,500,500,550,500,600,500,550,500,550,500,500,550,500,550,500,550,500,550,500,500,550,550,500,500,550,500,500,550,500,550,500,500,550,500,550,500,550,450,600,500,500,500,550,500,550,550,500,500,550,500};
unsigned my23[] ={500,550,500,1550,500,500,550,500,550,500,550,500,550,500,500,550,500,600,500,1500,500,550,500,550,550,1500,500,500,550,550,500,1500,550,1500,500,1500,550,1500,550,1500,550,500,500,550,500,500,550,550,500,500,500,550,500,600,500,550,500,550,500,500,550,500,550,500,550,500,550,500,500,550,550,500,500,550,500,500,550,500,550,500,500,550,500,550,500,550,450,600,500,500,500,550,500,550,550,500,500,550,500};
unsigned signal_9[] ={550,500,550,1500,500,550,500,550,500,550,500,500,550,550,500,500,500,550,550,1500,500,550,500,550,500,1550,500,550,500,500,500,1550,550,1500,500,1500,550,1550,550,1500,500,550,500,500,550,600,450,550,550,500,550,500,500,550,500,550,500,550,500,550,500,550,500,550,500,550,500,550,500,500,500,550,550,550,500,550,500,550,500,550,500,500,500,600,450,550,550,550,500,550,500,550,500,500,500,550,550,500,550};
unsigned signal_10[] ={500,550,550,1550,500,500,500,550,500,550,550,500,550,500,550,500,500,550,500,1550,500,500,550,550,500,1500,500,550,550,500,500,1550,500,1500,550,1500,500,1550,500,1550,450,600,500,550,450,550,550,500,500,550,550,500,550,500,550,500,500,550,550,500,500,550,500,550,500,550,500,550,500,500,550,500,550,500,550,500,550,500,500,550,500,550,500,550,500,550,500,550,500,550,500,550,500,500,550,500,550,500,550};
unsigned signal_11[] ={550,500,550,1500,500,550,500,550,500,500,550,500,550,500,500,550,500,550,500,1500,500,600,500,550,500,1500,550,500,550,500,500,1550,500,1550,450,1550,500,1600,500,1550,500,550,500,550,500,600,500,500,550,500,500,550,500,500,550,550,500,500,550,550,500,550,500,550,500,550,500,550,500,500,550,500,500,600,500,550,500,550,500,500,500,600,450,550,550,500,550,550,500,500,550,500,550,550,500,500,550,500,500};
unsigned signal_12[] ={600,500,500,1550,500,550,500,500,550,500,500,550,500,550,500,600,500,500,500,1550,500,550,550,500,500,1550,500,500,550,500,550,1500,500,1550,500,1500,550,1500,500,1550,500,550,500,550,500,500,550,500,550,550,500,550,500,550,500,550,500,500,550,550,500,500,500,550,550,500,500,550,500,500,550,500,500,550,550,500,500,550,500,550,550,550,500,500,500,550,550,500,500,550,500,550,500,500,500,550,500,550,550};
unsigned signal_13[] ={550,500,550,1500,500,550,550,500,550,500,500,550,500,550,500,550,500,500,550,1500,550,500,550,500,500,1550,500,500,550,550,500,1500,550,1500,500,1550,500,1500,550,1500,550,500,500,550,550,500,500,550,500,550,500,550,500,500,550,500,550,500,550,500,500,550,500,550,500,550,500,500,550,550,500,550,500,500,550,500,500,600,500,500,550,500,550,500,500,550,500,550,500,550,500,550,500,500,500,550,550,500,550};
unsigned signal_14[] ={550,500,550,1500,550,500,500,500,600,500,500,550,500,550,500,500,550,500,500,1550,550,450,550,550,550,1500,500,550,500,500,550,1500,550,1500,500,1550,500,1500,550,1500,600,450,550,550,500,500,550,500,500,550,500,550,500,500,550,500,550,500,550,500,500,600,500,500,550,500,550,500,500,550,550,500,500,550,500,550,550,500,500,550,500,500,550,550,500,500,550,500,550,550,500,550,500,550,500,500,550,500,550};
unsigned signal_15[] ={550,500,500,1550,450,600,500,550,450,550,500,550,500,550,550,500,500,550,450,1550,550,500,500,550,500,1550,500,1550,550,500,500,1550,500,1550,450,1600,450,1600,500,1550,450,550,500,550,500,550,500,550,500,550,500,550,500,600,500,500,550,550,500,550,500,600,500,550,500,550,500,550,500,550,550,550,500,550,500,550,500,600,500,550,550,500,550,500,550,550,500,550,500,550,500,600,500,550,500,550,500,550,500};
unsigned signal_16[] ={500,550,500,1550,500,550,450,600,450,550,550,550,450,600,450,550,500,550,500,1550,450,550,500,600,450,1600,450,550,500,550,500,1550,450,1600,450,1600,450,1600,450,1600,450,550,500,600,450,600,500,550,500,550,450,600,450,600,450,600,450,550,500,650,450,550,500,550,450,600,450,550,500,550,500,550,450,650,450,600,450,600,450,600,450,600,450,550,500,550,500,600,500,550,500,550,450,600,400,650,450,550,500};
unsigned off[] ={500,550,500,1550,500,550,450,600,450,550,550,550,450,600,450,550,500,550,500,1550,450,550,500,600,450,1600,450,550,500,550,500,1550,450,1600,450,1600,450,1600,450,1600,450,550,500,600,450,600,500,550,500,550,450,600,450,600,450,600,450,550,500,650,450,550,500,550,450,600,450,550,500,550,500,550,450,650,450,600,450,600,450,600,450,600,450,550,500,550,500,600,500,550,500,550,450,600,400,650,450,550,500};
unsigned signal_17[] ={450,600,450,1550,500,600,400,600,450,600,450,600,500,500,500,600,450,550,500,1550,500,550,450,600,500,1550,500,1550,500,550,450,1600,500,1550,450,1550,500,1600,500,1550,450,550,500,550,500,550,500,550,450,600,500,550,500,600,500,550,500,550,500,550,500,600,450,600,500,550,500,550,500,600,500,550,500,550,500,550,500,600,500,550,500,550,500,550,500,600,500,550,500,550,500,550,550,500,500,600,500,550,500};
unsigned off2[] ={450,600,450,1550,500,600,400,600,450,600,450,600,500,500,500,600,450,550,500,1550,500,550,450,600,500,1550,500,1550,500,550,450,1600,500,1550,450,1550,500,1600,500,1550,450,550,500,550,500,550,500,550,450,600,500,550,500,600,500,550,500,550,500,550,500,600,450,600,500,550,500,550,500,600,500,550,500,550,500,550,500,600,500,550,500,550,500,550,500,600,500,550,500,550,500,550,550,500,500,600,500,550,500};
unsigned off3[] ={ 3092, -8944, 576, -496, 484, -1556, 608, -468, 580, -464, 588, -460, 612, -464, 576, -468, 580, -460, 588, -516, 568, -1500, 580, -444, 600, -496, 520, -1520, 580, -492, 556, -492, 576, -1464, 580, -1488, 552, -1516, 516, -1492, 608, -1460, 608, -468, 580, -440, 604, -464, 588, -488, 552, -496, 580, -464, 580, -492, 608, -464, 588, -460, 548, -496, 608, -468, 576, -496, 580, -468, 576, -496, 560, -488, 548, -468, 608, -468, 576, -468, 584, -492, 548, -468, 608, -440, 604, -468, 584, -460, 592, -484, 580, -468, 552, -468, 608, -460, 580, -496, 456, -592, 552, -496, 580, -464, 552, -520, 552, -1492, 576, -1488, 580, -1488, 564, -1448, 544, -1824, 3060, -8940, 556, -1516, 512, -532, 584, -464, 612, -464, 552, -488, 588, -488, 552, -496, 584, -432, 584, -496, 584, -1480, 580, -468, 580, -464, 580, -492, 584, -1460, 584, -1484, 580, -1484, 540, -508, 556, -1540, 548, -1464, 632, -1484, 568, -480, 556, -1484, 584, -488, 556, -1484, 584, -1484, 580, -520, 580, -464, 584, -464, 584, -488, 520, -528, 580, -468, 580, -464, 584, -488, 560, -488, 580, -468, 580, -436, 608, -1488, 580, -1456, 572, -1500, 580, -464, 580, -1488, 580, -1488, 552, -1488, 588, -1504, 580, -1488, 580, -492, 564, -484, 580, -464, 584, -464, 580, -464, 584, -492, 520, -496, 612, -1488, 520, -1520, 580, -1484, 580, -1436, 580};



void loop() {

  // Serial.print(".");

  while (Serial.available()) {
    delay(3);
    char c = Serial.read();
    readString += c;
  }
  if (readString.length() > 0) {
    readString = readString.substring(0, readString.length() - 1);
    Serial.println(readString);
    if (readString.equals("on")) {
      Serial.println("starting on");
      irsend.sendRaw(on, sizeof(on) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending on");
    } else 
    if (readString.equals("off")) {
      Serial.println("starting off");
      irsend.sendRaw(off, sizeof(off) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending off");
    } else 
    if (readString.equals("23")) {
      Serial.println("starting 23");
      irsend.sendRaw(my23, sizeof(my23) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending 23");
    } else 
    if (readString.equals("24")) {
      Serial.println("starting 24");
      irsend.sendRaw(my24, sizeof(my24) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending 24");
    } else 
    if (readString.equals("24b")) {
      Serial.println("starting 24b");
      irsend.sendRaw(my24, sizeof(my24) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending 24b");
    } else 
    if (readString.equals("2off")) {
      Serial.println("starting 2off");
      irsend.sendRaw(off2, sizeof(off2) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending 2off");
    } else 
    if (readString.equals("3off")) {
      Serial.println("starting 3off");
      irsend.sendRaw(off3, sizeof(off3) / sizeof(int), khz);
      delay(10000);
      Serial.println("ending 3off");
    } else {
      Serial.print("Command not found:");
      Serial.print(readString);
      Serial.println(":");
    }
    readString = "";
    Serial.println("");
  }
}

